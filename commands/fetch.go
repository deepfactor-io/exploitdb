package commands

import (
	"errors"
	"log"

	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

// fetchCmd represents the fetch command
var fetchCmd = &cobra.Command{
	Use:   "fetch",
	Short: "Fetch the data of exploit",
	Long:  `Fetch the data of exploit`,
}

func init() {
	RootCmd.AddCommand(fetchCmd)

	fetchCmd.PersistentFlags().Int("batch-size", 500, "The number of batch size to insert.")
	_ = viper.BindPFlag("batch-size", fetchCmd.PersistentFlags().Lookup("batch-size"))
}

/*
FetchAllDB : fetch data from all sources
*/
func FetchAllDB() (bool, error) {
	var failureCount int

	// exploits
	if err := fetchExploitDB(fetchExploitDBCmd, []string{}); err != nil {
		log.Printf("error while fetching exploit metadata. Error:%s", err)
		failureCount++
	}

	// pocs
	if err := fetchGitHubRepos(fetchGitHubReposCmd, []string{}); err != nil {
		log.Printf("error while fetching poc metadata. Error:%s", err)
		failureCount++
	}

	// exploit incidents
	if err := fetchCISAExploitCatalog(fetchCISAExploitCatalogCmd, []string{}); err != nil {
		log.Printf("error while fetching exploit incident metadata. Error:%s", err)
		failureCount++
	}

	if failureCount == 3 {
		return false, errors.New("Couldn't fetch info from any source")
	}

	return failureCount == 0, nil

}
