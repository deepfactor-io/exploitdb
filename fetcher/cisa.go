//https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json

package fetcher

import (
	"crypto/md5"
	"encoding/json"
	"fmt"

	"github.com/vulsio/go-exploitdb/models"
	"github.com/vulsio/go-exploitdb/util"
)

const cisaCatalogURL string = "https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json"

/*
cisaExploitCatalog : cisa exploit catalog json schema
*/
type cisaExploitCatalog struct {
	Title           string `json:"title"`
	CatalogVersion  string `json:"catalogVersion"`
	DateReleased    string `json:"dateReleased"`
	Count           int    `json:"count"`
	Vulnerabiltiies []struct {
		CVEID             string `json:"cveID"`
		VendorProject     string `json:"vendorProject"`
		Product           string `json:"product"`
		VulnerabilityName string `json:"vulnerabilityName"`
		DateAdded         string `json:"dateAdded"`
		Description       string `json:"shortDescription"`
		RequiredAction    string `json:"requiredAction"`
		DueDate           string `json:"dueDate"`
		Notes             string `json:"notes"`
	} `json:"vulnerabilities"`
}

// FetchCISAExploitCatalog : download cisa exploit catalog json and process it
func FetchCISAExploitCatalog() (exploits []models.Exploit, err error) {
	data, err := util.FetchURL(cisaCatalogURL)
	if err != nil {
		return nil, err
	}

	var catalog cisaExploitCatalog

	err = json.Unmarshal(data, &catalog)
	if err != nil {
		return nil, err
	}

	for _, vuln := range catalog.Vulnerabiltiies {
		cisaExploit := models.Exploit{
			ExploitUniqueID: fmt.Sprintf("%s-%x", models.CISA, md5.Sum([]byte(vuln.CVEID+vuln.Product+vuln.VendorProject))),
			ExploitType:     models.CISA,
			CveID:           vuln.CVEID,
			CISAExploitCatalog: &models.CISAExploitCatalog{
				VendorProject:     vuln.VendorProject,
				VulnerabilityName: vuln.VulnerabilityName,
				Product:           vuln.Product,
				DateAdded:         vuln.DateAdded,
				Description:       vuln.Description,
				RequiredAction:    vuln.RequiredAction,
				DueDate:           vuln.DueDate,
				Notes:             vuln.Notes,
				CveID:             vuln.CVEID,
			},
		}
		exploits = append(exploits, cisaExploit)
	}

	return exploits, nil
}
